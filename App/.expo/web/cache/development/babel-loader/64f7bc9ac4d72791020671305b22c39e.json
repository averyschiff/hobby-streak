{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/avery/hobby-streak/App/Components/SingleModel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styles from \"../styles.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { getModel as _getModel, getTasks as _getTasks, updateTask as _updateTask, deleteTask as _deleteTask, createTask as _createTask } from \"../store/singleModel\";\nimport CheckBox from '@react-native-community/checkbox';\nimport ProgressBar from 'react-native-progress/Bar';\n\nvar Task = function Task(_ref) {\n  var task = _ref.task,\n      id = _ref.id,\n      complete = _ref.complete,\n      updateTask = _ref.updateTask,\n      deleteTask = _ref.deleteTask,\n      createTask = _ref.createTask;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      newTask = _React$useState2[0],\n      _onChangeText = _React$useState2[1];\n\n  return id != -1 ? React.createElement(View, {\n    style: styles.taskItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.taskBoxAndText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(CheckBox, {\n    disabled: false,\n    value: complete,\n    onValueChange: function onValueChange(newValue) {\n      return updateTask(id, newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  }, task)), React.createElement(Button, {\n    title: \"x\",\n    onPress: function onPress() {\n      return deleteTask(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  })) : React.createElement(View, {\n    style: styles.taskItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 20,\n      borderColor: 'gray',\n      borderWidth: 0,\n      width: 110\n    },\n    value: newTask,\n    placeholder: 'Enter new task...',\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"+\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!newTask) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(createTask(newTask));\n\n            case 3:\n              _onChangeText('');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport var SingleModel = function (_React$Component) {\n  _inherits(SingleModel, _React$Component);\n\n  var _super = _createSuper(SingleModel);\n\n  function SingleModel() {\n    var _this2;\n\n    _classCallCheck(this, SingleModel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _this2.renderItem = function (_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Task, {\n        task: item.task,\n        complete: item.complete,\n        id: item.id,\n        updateTask: _this2.props.updateTask,\n        deleteTask: _this2.props.deleteTask,\n        createTask: function createTask(taskName) {\n          return _this2.props.createTask(taskName, _this2.props.model.id, _this2.props.model.unit_id, _this2.props.model.army_id);\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 3\n        }\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(SingleModel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.props.getModel(this.props.model_id));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(this.props.getTasks(this.props.model_id));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.model.modelName ? React.createElement(View, {\n        style: styles.singleModel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.modelText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.modelName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, this.props.model.modelName), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, this.props.unitName)), React.createElement(ProgressBar, {\n        progress: this.props.progress,\n        width: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }\n      }), React.createElement(FlatList, {\n        data: [].concat(_toConsumableArray(this.props.tasks), [{\n          task: '',\n          id: -1,\n          complete: false\n        }]),\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        columnWrapperStyle: styles.taskList,\n        numColumns: 2,\n        removeClippedSubviews: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }\n      })) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 12\n        }\n      }, \"Single Model View\"));\n    }\n  }]);\n\n  return SingleModel;\n}(React.Component);\n\nvar mapState = function mapState(state) {\n  return {\n    model: state.singleModel.model,\n    tasks: state.singleModel.tasks,\n    progress: state.singleModel.progress\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    getModel: function getModel(model_id) {\n      dispatch(_getModel(model_id));\n    },\n    getTasks: function getTasks(model_id) {\n      dispatch(_getTasks(model_id));\n    },\n    updateTask: function updateTask(task_id, value) {\n      dispatch(_updateTask(task_id, value));\n    },\n    deleteTask: function deleteTask(task_id) {\n      dispatch(_deleteTask(task_id));\n    },\n    createTask: function createTask(task_id, model_id, unit_id, army_id) {\n      dispatch(_createTask(task_id, model_id, unit_id, army_id));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleModel);","map":{"version":3,"sources":["/home/avery/hobby-streak/App/Components/SingleModel.js"],"names":["React","connect","styles","getModel","getTasks","updateTask","deleteTask","createTask","CheckBox","ProgressBar","Task","task","id","complete","useState","newTask","onChangeText","taskItem","taskBoxAndText","newValue","height","borderColor","borderWidth","width","text","SingleModel","renderItem","item","props","taskName","model","unit_id","army_id","model_id","modelName","singleModel","modelText","unitName","progress","tasks","toString","taskList","Component","mapState","state","mapDispatch","dispatch","task_id","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport styles from '../styles.js'\nimport {Text, View, FlatList, Button, TextInput} from 'react-native'\nimport {getModel, getTasks, updateTask, deleteTask, createTask} from '../store/singleModel'\nimport CheckBox from '@react-native-community/checkbox'\nimport ProgressBar from 'react-native-progress/Bar'\n\nconst Task = ({task, id, complete, updateTask, deleteTask, createTask}) => {\n\tconst [newTask, onChangeText] = React.useState('');\n\treturn(\n\t\tid!=-1?\n\t\t\t(\n\t\t\t<View style={styles.taskItem}>\n\t\t\t\t<View style={styles.taskBoxAndText}>\n\t\t\t\t\t<CheckBox\n\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\tvalue={complete}\n\t\t\t\t\t\tonValueChange={(newValue)=>updateTask(id, newValue)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Text style={styles.task}>{task}</Text>\n\t\t\t\t</View>\n\t\t\t\t<Button\n\t\t\t\ttitle='x'\n\t\t\t\tonPress={()=>deleteTask(id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t):\n\t\t\t(<View style={styles.taskItem}>\n\t\t\t\t<TextInput\n\t\t\t\tstyle={{ height: 20, \n\t\t\t\t\tborderColor: 'gray', \n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\twidth: 110}}\n\t\t\t\tvalue={newTask}\n\t\t\t\tplaceholder={'Enter new task...'}\n\t\t\t\tonChangeText={text=>onChangeText(text)}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\ttitle='+'\n\t\t\t\tonPress={async ()=>{\n\t\t\t\t\tif (newTask) await createTask(newTask)\n\t\t\t\t\tonChangeText('')\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t</View>)\n\t)\n}\n\nexport class SingleModel extends React.Component{\n\tasync componentDidMount(){\n\t\tawait this.props.getModel(this.props.model_id)\n\t\tawait this.props.getTasks(this.props.model_id)\n\t}\n\n\trenderItem = ({item}) => (\n\t\t<Task task={item.task} \n\t\tcomplete={item.complete} \n\t\tid={item.id}\n\t\tupdateTask={this.props.updateTask}\n\t\tdeleteTask={this.props.deleteTask}\n\t\tcreateTask={(taskName) => this.props.createTask(\n\t\t\ttaskName,\n\t\t\tthis.props.model.id,\n\t\t\tthis.props.model.unit_id,\n\t\t\tthis.props.model.army_id,\n\t\t)}\n\t\t/>\n\t)\n\n\n\trender(){\n\t\treturn(\n\t\t\tthis.props.model.modelName?\n\t\t\t\t(<View style={styles.singleModel}>\n\t\t\t\t\t<View style={styles.modelText}>\n\t\t\t\t\t\t<Text style={styles.modelName}>{this.props.model.modelName}</Text>\n\t\t\t\t\t\t<Text>{this.props.unitName}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<ProgressBar progress={this.props.progress} width={300}/>\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tdata={[...this.props.tasks,\n\t\t\t\t\t\t\t{task: '',\n\t\t\t\t\t\t\tid: -1,\n\t\t\t\t\t\t\tcomplete: false,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trenderItem ={this.renderItem}\n\t\t\t\t\t\tkeyExtractor={item=>item.id.toString()}\n\t\t\t\t\t\tcolumnWrapperStyle={styles.taskList}\n\t\t\t\t\t\tnumColumns={2}\n\t\t\t\t\t\tremoveClippedSubviews={false}\n\t\t\t\t\t/>\n\t\t\t\t</View>):\n\t\t\t\t(<View><Text>Single Model View</Text></View>)\n\t\t\t)\n\t}\n}\n\nconst mapState = state => ({\n\tmodel: state.singleModel.model,\n\ttasks: state.singleModel.tasks,\n\tprogress: state.singleModel.progress,\n})\n\nconst mapDispatch = dispatch => ({\n\tgetModel: (model_id)=>{\n\t\tdispatch(getModel(model_id))\n\t},\n\tgetTasks: (model_id)=>{\n\t\tdispatch(getTasks(model_id))\n\t},\n\tupdateTask: (task_id, value)=>{\n\t\tdispatch(updateTask(task_id, value))\n\t},\n\tdeleteTask: (task_id)=>{\n\t\tdispatch(deleteTask(task_id))\n\t},\n\tcreateTask: (task_id, model_id, unit_id, army_id)=>{\n\t\tdispatch(createTask(task_id, model_id, unit_id, army_id))\n\t},\n})\n\nexport default connect(mapState, mapDispatch)(SingleModel)\n"]},"metadata":{},"sourceType":"module"}