{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/avery/hobby-streak/App/Components/SingleModel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styles from \"../styles.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getModel as _getModel, getTasks as _getTasks, updateTask as _updateTask, deleteTask as _deleteTask, createTask as _createTask, setNote as _setNote, updateNote } from \"../store/singleModel\";\nimport ProgressBar from 'react-native-progress/Bar';\nimport Task from \"./Task\";\nexport var SingleModel = function (_React$Component) {\n  _inherits(SingleModel, _React$Component);\n\n  var _super = _createSuper(SingleModel);\n\n  function SingleModel() {\n    var _this;\n\n    _classCallCheck(this, SingleModel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(Task, {\n        task: item.task,\n        complete: item.complete,\n        id: item.id,\n        updateTask: _this.props.updateTask,\n        deleteTask: _this.props.deleteTask,\n        createTask: function createTask(taskName) {\n          return _this.props.createTask(taskName, _this.props.model.id, _this.props.model.unit_id, _this.props.model.army_id);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 3\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleModel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.props.getModel(this.props.model_id));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(this.props.getTasks(this.props.model_id));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.model.modelName ? React.createElement(KeyboardAvoidingView, {\n        behavior: \"position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.singleModel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.modelText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.modelName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }\n      }, this.props.model.modelName), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 8\n        }\n      }, this.props.unitName)), React.createElement(ProgressBar, {\n        progress: this.props.progress,\n        width: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 300\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: [].concat(_toConsumableArray(this.props.tasks), [{\n          task: '',\n          id: -1,\n          complete: false\n        }]),\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        columnWrapperStyle: styles.taskList,\n        numColumns: 2,\n        removeClippedSubviews: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 8\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          height: 200,\n          borderColor: 'black',\n          borderWidth: 1,\n          width: 300,\n          padding: 10,\n          textAlignVertical: 'top'\n        },\n        placeholder: \"Notes...\",\n        multiline: true,\n        value: this.props.model.note,\n        onChangeText: function onChangeText(text) {\n          _this2.props.setNote(text);\n        },\n        onEndEditing: function onEndEditing() {\n          updateNote(_this2.props.model.note, _this2.props.model.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      })))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }\n      }, \"Single Model View\"));\n    }\n  }]);\n\n  return SingleModel;\n}(React.Component);\n\nvar mapState = function mapState(state) {\n  return {\n    model: state.singleModel.model,\n    tasks: state.singleModel.tasks,\n    progress: state.singleModel.progress\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    getModel: function getModel(model_id) {\n      dispatch(_getModel(model_id));\n    },\n    getTasks: function getTasks(model_id) {\n      dispatch(_getTasks(model_id));\n    },\n    updateTask: function updateTask(task_id, value) {\n      dispatch(_updateTask(task_id, value));\n    },\n    deleteTask: function deleteTask(task_id) {\n      dispatch(_deleteTask(task_id));\n    },\n    createTask: function createTask(task_id, model_id, unit_id, army_id) {\n      dispatch(_createTask(task_id, model_id, unit_id, army_id));\n    },\n    setNote: function setNote(note) {\n      dispatch(_setNote(note));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SingleModel);","map":{"version":3,"sources":["/home/avery/hobby-streak/App/Components/SingleModel.js"],"names":["React","connect","styles","getModel","getTasks","updateTask","deleteTask","createTask","setNote","updateNote","ProgressBar","Task","SingleModel","renderItem","item","task","complete","id","props","taskName","model","unit_id","army_id","model_id","modelName","singleModel","modelText","unitName","progress","height","tasks","toString","taskList","borderColor","borderWidth","width","padding","textAlignVertical","note","text","Component","mapState","state","mapDispatch","dispatch","task_id","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport styles from '../styles.js'\nimport {Text, View, FlatList, TextInput, KeyboardAvoidingView, Platform} from 'react-native'\nimport {\n\tgetModel, \n\tgetTasks, \n\tupdateTask, \n\tdeleteTask, \n\tcreateTask,\n\tsetNote,\n\tupdateNote} from '../store/singleModel'\nimport ProgressBar from 'react-native-progress/Bar'\nimport Task from './Task'\n\n\nexport class SingleModel extends React.Component{\n\tasync componentDidMount(){\n\t\tawait this.props.getModel(this.props.model_id)\n\t\tawait this.props.getTasks(this.props.model_id)\n\t}\n\n\trenderItem = ({item}) => (\n\t\t<Task task={item.task} \n\t\tcomplete={item.complete} \n\t\tid={item.id}\n\t\tupdateTask={this.props.updateTask}\n\t\tdeleteTask={this.props.deleteTask}\n\t\tcreateTask={(taskName) => this.props.createTask(\n\t\t\ttaskName,\n\t\t\tthis.props.model.id,\n\t\t\tthis.props.model.unit_id,\n\t\t\tthis.props.model.army_id,\n\t\t)}\n\t\t/>\n\t)\n\n\n\trender(){\n\t\treturn(\n\t\t\tthis.props.model.modelName?\n\t\t\t\t(<KeyboardAvoidingView \n\t\t\t\t\tbehavior=\"position\"\n\t\t\t\t>\n\t\t\t\t\t<View style={styles.singleModel}>\n\t\t\t\t\t\t<View style={styles.modelText}>\n\t\t\t\t\t\t\t<Text style={styles.modelName}>{this.props.model.modelName}</Text>\n\t\t\t\t\t\t\t<Text>{this.props.unitName}</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<ProgressBar progress={this.props.progress} width={300}/>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{height: 300}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FlatList\n\t\t\t\t\t\t\t\tdata={[...this.props.tasks,\n\t\t\t\t\t\t\t\t\t{task: '',\n\t\t\t\t\t\t\t\t\tid: -1,\n\t\t\t\t\t\t\t\t\tcomplete: false,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\trenderItem ={this.renderItem}\n\t\t\t\t\t\t\t\tkeyExtractor={item=>item.id.toString()}\n\t\t\t\t\t\t\t\tcolumnWrapperStyle={styles.taskList}\n\t\t\t\t\t\t\t\tnumColumns={2}\n\t\t\t\t\t\t\t\tremoveClippedSubviews={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 200,\n\t\t\t\t\t\t\tborderColor: 'black',\n\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\t//THIS WILL BREAK IN IOS\n\t\t\t\t\t\t\ttextAlignVertical: 'top'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder={\"Notes...\"}\n\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\tvalue={this.props.model.note}\n\t\t\t\t\t\tonChangeText = {text=>{this.props.setNote(text)}}\n\t\t\t\t\t\tonEndEditing={()=>{\n\t\t\t\t\t\t\tupdateNote(this.props.model.note, this.props.model.id)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</KeyboardAvoidingView>):\n\t\t\t\t(<View><Text>Single Model View</Text></View>)\n\t\t\t)\n\t}\n}\n\nconst mapState = state => ({\n\tmodel: state.singleModel.model,\n\ttasks: state.singleModel.tasks,\n\tprogress: state.singleModel.progress,\n})\n\nconst mapDispatch = dispatch => ({\n\tgetModel: (model_id)=>{\n\t\tdispatch(getModel(model_id))\n\t},\n\tgetTasks: (model_id)=>{\n\t\tdispatch(getTasks(model_id))\n\t},\n\tupdateTask: (task_id, value)=>{\n\t\tdispatch(updateTask(task_id, value))\n\t},\n\tdeleteTask: (task_id)=>{\n\t\tdispatch(deleteTask(task_id))\n\t},\n\tcreateTask: (task_id, model_id, unit_id, army_id)=>{\n\t\tdispatch(createTask(task_id, model_id, unit_id, army_id))\n\t},\n\tsetNote: (note)=>{\n\t\tdispatch(setNote(note))\n\t}\n})\n\nexport default connect(mapState, mapDispatch)(SingleModel)\n"]},"metadata":{},"sourceType":"module"}