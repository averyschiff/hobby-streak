{"ast":null,"code":"import * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase(\"hobby.db\");\n\nfunction newTask(task, model_id, unit_id, army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"INSERT INTO tasks (task, model_id, unit_id, army_id) VALUES(?, ?, ?, ?)\", [task, model_id, unit_id, army_id], callback, errorHandler);\n  });\n}\n\nfunction updateTask(updateString, task_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"UPDATE tasks SET ? WHERE id = ?\", [updateString, task_id], callback, errorHandler);\n  });\n}\n\nfunction updateTasksByUnit(updateString, unit_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"UPDATE tasks SET ? WHERE unit_id = ?\", [updateString, unit_id], callback, errorHandler);\n  });\n}\n\nfunction updateTasksByArmy(updateString, army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"UPDATE tasks SET ? WHERE army_id = ?\", [updateString, army_id], callback, errorHandler);\n  });\n}\n\nfunction getTask(task_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM tasks WHERE id = ?\", [task_id], callback, errorHandler);\n  });\n}\n\nfunction getTasksByModel(model_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM tasks WHERE model_id = ?\", [model_id], callback, errorHandler);\n  });\n}\n\nfunction getTasksByUnit(unit_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM tasks WHERE unit_id = ?\", [unit_id], callback, errorHandler);\n  });\n}\n\nfunction getTasksByArmy(army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM tasks WHERE army_id = ?\", [army_id], callback, errorHandler);\n  });\n}\n\nfunction getAllTasks(callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM tasks\", [], callback, errorHandler);\n  });\n}\n\nfunction deleteTask(task_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"DELETE FROM tasks WHERE id = ?\", [model_id], callback, errorHandler);\n  });\n}\n\nfunction deleteTasksByModel(model_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"DELETE FROM tasks WHERE model_id = ?\", [model_id], callback, errorHandler);\n  });\n}\n\nfunction deleteTasksByUnit(unit_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"DELETE FROM tasks WHERE unit_id = ?\", [unit_id], callback, errorHandler);\n  });\n}\n\nfunction deleteTasksByArmy(army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"DELETE FROM tasks WHERE army_id = ?\", [army_id], callback, errorHandler);\n  });\n}\n\nexport default {\n  newTask: newTask,\n  updateTask: updateTask,\n  updateTasksByUnit: updateTasksByUnit,\n  updateTasksByArmy: updateTasksByArmy,\n  getTask: getTask,\n  getTasksByModel: getTasksByModel,\n  getTasksByUnit: getTasksByUnit,\n  getTasksByArmy: getTasksByArmy,\n  getAllTasks: getAllTasks,\n  deleteTask: deleteTask,\n  deleteTasksByModel: deleteTasksByModel,\n  deleteTasksByUnit: deleteTasksByUnit,\n  deleteTasksByArmy: deleteTasksByArmy\n};","map":{"version":3,"sources":["/home/jhett/Documents/averyStuff/hobby-streak/hobby-streak/App/db/tasks.js"],"names":["SQLite","db","openDatabase","newTask","task","model_id","unit_id","army_id","callback","errorHandler","transaction","tx","executeSql","updateTask","updateString","task_id","updateTasksByUnit","updateTasksByArmy","getTask","getTasksByModel","getTasksByUnit","getTasksByArmy","getAllTasks","deleteTask","deleteTasksByModel","deleteTasksByUnit","deleteTasksByArmy"],"mappings":"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","sourcesContent":["import * as SQLite from 'expo-sqlite'\nconst db = SQLite.openDatabase(\"hobby.db\")\n\nfunction newTask(task, model_id, unit_id, army_id, callback, errorHandler){\n  db.transaction(\n    tx => {\n      tx.executeSql(\n\t      \"INSERT INTO tasks (task, model_id, unit_id, army_id) VALUES(?, ?, ?, ?)\",\n\t      [task, model_id, unit_id, army_id],\n\t      callback,\n\t      errorHandler\n      )\n    }\n  )\n}\n\nfunction updateTask(updateString, task_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"UPDATE tasks SET ? WHERE id = ?\",\n\t\t\t\t[updateString, task_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction updateTasksByUnit(updateString, unit_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"UPDATE tasks SET ? WHERE unit_id = ?\",\n\t\t\t\t[updateString, unit_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction updateTasksByArmy(updateString, army_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"UPDATE tasks SET ? WHERE army_id = ?\",\n\t\t\t\t[updateString, army_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getTask(task_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM tasks WHERE id = ?\",\n\n\t\t\t\t[task_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getTasksByModel(model_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM tasks WHERE model_id = ?\",\n\t\t\t\t[model_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getTasksByUnit(unit_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM tasks WHERE unit_id = ?\",\n\t\t\t\t[unit_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getTasksByArmy(army_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM tasks WHERE army_id = ?\",\n\t\t\t\t[army_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getAllTasks(callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM tasks\",\n\t\t\t\t[],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction deleteTask(task_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"DELETE FROM tasks WHERE id = ?\",\n\t\t\t\t[model_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\nfunction deleteTasksByModel(model_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"DELETE FROM tasks WHERE model_id = ?\",\n\t\t\t\t[model_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction deleteTasksByUnit(unit_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"DELETE FROM tasks WHERE unit_id = ?\",\n\t\t\t\t[unit_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\nfunction deleteTasksByArmy(army_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"DELETE FROM tasks WHERE army_id = ?\",\n\t\t\t\t[army_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\nexport default{\n\tnewTask,\n\tupdateTask,\n\tupdateTasksByUnit,\n\tupdateTasksByArmy,\n\tgetTask,\n\tgetTasksByModel,\n\tgetTasksByUnit,\n\tgetTasksByArmy,\n\tgetAllTasks,\n\tdeleteTask,\n\tdeleteTasksByModel,\n\tdeleteTasksByUnit,\n\tdeleteTasksByArmy\n}\n"]},"metadata":{},"sourceType":"module"}