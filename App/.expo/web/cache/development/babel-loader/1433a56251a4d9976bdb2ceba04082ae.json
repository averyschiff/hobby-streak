{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { models, tasks } from \"../db/\";\nvar SET_MODEL = 'SET_MODEL';\nvar SET_TASKS = 'SET_TASKS';\nexport var setModel = function setModel(model) {\n  return {\n    type: SET_MODEL,\n    model: model\n  };\n};\nexport var setTasks = function setTasks(tasks) {\n  return {\n    type: SET_TASKS,\n    tasks: tasks\n  };\n};\nexport var getModel = function getModel(model_id) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(models.getModel(model_id, function (_, _ref) {\n              var rows = _ref.rows;\n              dispatch(setModel(rows.item(0)));\n            }, function (_, err) {\n              alert('Error retrieving model: ' + err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getTasks = function getTasks(model_id) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(tasks.getTasksByModel(model_id, function (_, _ref2) {\n              var rows = _ref2.rows;\n              dispatch(setTasks(rows['_array']));\n            }, function (_, err) {\n              alert('Error retrieving tasks: ' + err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nvar initialModel = {};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialModel;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_MODEL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        modelName: action.model.modelName\n      });\n\n    case SET_TASKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: action.tasks\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jhett/Documents/averyStuff/hobby-streak/hobby-streak/App/store/singleModel.js"],"names":["models","tasks","SET_MODEL","SET_TASKS","setModel","model","type","setTasks","getModel","model_id","dispatch","_","rows","item","err","alert","getTasks","getTasksByModel","initialModel","state","action","modelName"],"mappings":";;;;;;;AAAA,SAAQA,MAAR,EAAgBC,KAAhB;AAEA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,SAAS,GAAG,WAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAY;AACnCC,IAAAA,IAAI,EAAEJ,SAD6B;AAEnCG,IAAAA,KAAK,EAALA;AAFmC,GAAZ;AAAA,CAAjB;AAKP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACN,KAAD;AAAA,SAAY;AACnCK,IAAAA,IAAI,EAAEH,SAD6B;AAEnCF,IAAAA,KAAK,EAALA;AAFmC,GAAZ;AAAA,CAAjB;AAKP,OAAO,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AACrC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAV,MAAM,CAACQ,QAAP,CAAgBC,QAAhB,EACL,UAACE,CAAD,QAAe;AAAA,kBAAVC,IAAU,QAAVA,IAAU;AACdF,cAAAA,QAAQ,CAACN,QAAQ,CAACQ,IAAI,CAACC,IAAL,CAAU,CAAV,CAAD,CAAT,CAAR;AACA,aAHI,EAIL,UAACF,CAAD,EAAIG,GAAJ,EAAW;AAACC,cAAAA,KAAK,CAAC,6BAA6BD,GAA9B,CAAL;AAAwC,aAJ/C,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQA,CATM;AAWP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACP,QAAD,EAAc;AACrC,SAAO,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAT,KAAK,CAACgB,eAAN,CAAsBR,QAAtB,EACL,UAACE,CAAD,SAAe;AAAA,kBAAVC,IAAU,SAAVA,IAAU;AACdF,cAAAA,QAAQ,CAACH,QAAQ,CAACK,IAAI,CAAC,QAAD,CAAL,CAAT,CAAR;AACA,aAHI,EAIL,UAACD,CAAD,EAAIG,GAAJ,EAAY;AAACC,cAAAA,KAAK,CAAC,6BAA6BD,GAA9B,CAAL;AAAwC,aAJhD,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQA,CATM;AAWP,IAAMI,YAAY,GAAG,EAArB;AAEA,eAAe,YAAqC;AAAA,MAA3BC,KAA2B,uEAArBD,YAAqB;AAAA,MAAPE,MAAO;;AACnD,UAAQA,MAAM,CAACd,IAAf;AACC,SAAKJ,SAAL;AACC,6CACIiB,KADJ;AAECE,QAAAA,SAAS,EAAED,MAAM,CAACf,KAAP,CAAagB;AAFzB;;AAID,SAAKlB,SAAL;AACC,6CACIgB,KADJ;AAEClB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB;AAFf;;AAID;AACC,aAAOkB,KAAP;AAZF;AAcA","sourcesContent":["import {models, tasks} from \"../db/\"\n\nconst SET_MODEL = 'SET_MODEL'\nconst SET_TASKS = 'SET_TASKS'\n\nexport const setModel = (model) => ({\n\ttype: SET_MODEL,\n\tmodel\n})\n\nexport const setTasks = (tasks) => ({\n\ttype: SET_TASKS,\n\ttasks\n})\n\nexport const getModel = (model_id) => {\n\treturn async dispatch => {\n\t\tawait models.getModel(model_id,\n\t\t\t(_, {rows}) => {\n\t\t\t\tdispatch(setModel(rows.item(0)))\n\t\t\t},\n\t\t\t(_, err)=> {alert('Error retrieving model: ' + err)}\n\t\t)\n\t}\n}\n\nexport const getTasks = (model_id) => {\n\treturn async dispatch => {\n\t\tawait tasks.getTasksByModel(model_id,\n\t\t\t(_, {rows}) => {\n\t\t\t\tdispatch(setTasks(rows['_array']))\n\t\t\t},\n\t\t\t(_, err) => {alert('Error retrieving tasks: ' + err)}\n\t\t)\n\t}\n}\n\nconst initialModel = {}\n\nexport default function (state=initialModel, action){\n\tswitch (action.type){\n\t\tcase SET_MODEL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodelName: action.model.modelName\n\t\t\t}\n\t\tcase SET_TASKS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: action.tasks\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}