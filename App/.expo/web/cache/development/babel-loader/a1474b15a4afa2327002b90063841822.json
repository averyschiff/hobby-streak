{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/avery/hobby-streak/App/Components/Task.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport styles from \"../styles.js\";\nimport CheckBox from '@react-native-community/checkbox';\nexport default Task = function Task(_ref) {\n  var task = _ref.task,\n      id = _ref.id,\n      complete = _ref.complete,\n      updateTask = _ref.updateTask,\n      deleteTask = _ref.deleteTask,\n      createTask = _ref.createTask;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      newTask = _React$useState2[0],\n      _onChangeText = _React$useState2[1];\n\n  return id != -1 ? React.createElement(View, {\n    style: styles.taskItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.taskBoxAndText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(CheckBox, {\n    disabled: false,\n    tintColors: {\n      true: '#007AFF',\n      false: '#000'\n    },\n    value: complete,\n    onValueChange: function onValueChange(newValue) {\n      return updateTask(id, newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }\n  }, task)), React.createElement(Button, {\n    title: \"x\",\n    onPress: function onPress() {\n      return deleteTask(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  })) : React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.taskItem), {}, {\n      borderWidth: 0\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 20,\n      borderWidth: 0,\n      width: 110\n    },\n    value: newTask,\n    placeholder: 'Enter new task...',\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"+\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!newTask) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(createTask(newTask));\n\n            case 3:\n              _onChangeText('');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/home/avery/hobby-streak/App/Components/Task.js"],"names":["React","styles","CheckBox","Task","task","id","complete","updateTask","deleteTask","createTask","useState","newTask","onChangeText","taskItem","taskBoxAndText","true","false","newValue","borderWidth","height","width","text"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,eAAeC,IAAI,GAAG,oBAA8D;AAAA,MAA5DC,IAA4D,QAA5DA,IAA4D;AAAA,MAAtDC,EAAsD,QAAtDA,EAAsD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,wBACnDT,KAAK,CAACU,QAAN,CAAe,EAAf,CADmD;AAAA;AAAA,MAC5EC,OAD4E;AAAA,MACnEC,aADmE;;AAEnF,SACCP,EAAE,IAAE,CAAC,CAAL,GAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACY,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AACO,IAAA,QAAQ,EAAE,KADjB;AAEO,IAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAE,SADE;AAERC,MAAAA,KAAK,EAAE;AAFC,KAFnB;AAMC,IAAA,KAAK,EAAEV,QANR;AAOC,IAAA,aAAa,EAAE,uBAACW,QAAD;AAAA,aAAYV,UAAU,CAACF,EAAD,EAAKY,QAAL,CAAtB;AAAA,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,IAA3B,CAVD,CADD,EAaC,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,GADN;AAEA,IAAA,OAAO,EAAE;AAAA,aAAII,UAAU,CAACH,EAAD,CAAd;AAAA,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CAFD,GAqBE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCACFJ,MAAM,CAACY,QADL;AAELK,MAAAA,WAAW,EAAE;AAFR,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA,oBAAC,SAAD;AACA,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AACND,MAAAA,WAAW,EAAE,CADP;AAEDE,MAAAA,KAAK,EAAE;AAFN,KADP;AAKA,IAAA,KAAK,EAAET,OALP;AAMA,IAAA,WAAW,EAAE,mBANb;AAOA,IAAA,YAAY,EAAE,sBAAAU,IAAI;AAAA,aAAET,aAAY,CAACS,IAAD,CAAd;AAAA,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAaA,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,GADN;AAEA,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJV,OADI;AAAA;AAAA;AAAA;;AAAA;AAAA,+CACWF,UAAU,CAACE,OAAD,CADrB;;AAAA;AAERC,cAAAA,aAAY,CAAC,EAAD,CAAZ;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,CAtBH;AA4CA,CA9CD","sourcesContent":["import React from 'react'\nimport {Text, View, Button, TextInput} from 'react-native'\nimport styles from '../styles.js'\nimport CheckBox from '@react-native-community/checkbox'\n\nexport default Task = ({task, id, complete, updateTask, deleteTask, createTask}) => {\n\tconst [newTask, onChangeText] = React.useState('');\n\treturn(\n\t\tid!=-1?\n\t\t\t(\n\t\t\t<View style={styles.taskItem}>\n\t\t\t\t<View style={styles.taskBoxAndText}>\n\t\t\t\t\t<CheckBox\n            disabled={false}\n            tintColors={{\n                true: '#007AFF',\n                false: '#000'\n            }}\n\t\t\t\t\t\tvalue={complete}\n\t\t\t\t\t\tonValueChange={(newValue)=>updateTask(id, newValue)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Text style={styles.task}>{task}</Text>\n\t\t\t\t</View>\n\t\t\t\t<Button\n\t\t\t\ttitle='x'\n\t\t\t\tonPress={()=>deleteTask(id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t):\n\t\t\t(<View style={{\n          ...styles.taskItem, \n          borderWidth: 0,\n        }}>\n\t\t\t\t<TextInput\n\t\t\t\tstyle={{ height: 20, \n\t\t\t\t\tborderWidth: 0,\n          width: 110,\n        }}\n\t\t\t\tvalue={newTask}\n\t\t\t\tplaceholder={'Enter new task...'}\n\t\t\t\tonChangeText={text=>onChangeText(text)}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\ttitle='+'\n\t\t\t\tonPress={async ()=>{\n\t\t\t\t\tif (newTask) await createTask(newTask)\n\t\t\t\t\tonChangeText('')\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t</View>)\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}