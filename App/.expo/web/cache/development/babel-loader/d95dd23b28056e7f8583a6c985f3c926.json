{"ast":null,"code":"import * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase(\"hobby.db\");\n\nfunction newUnit(unitName, army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"INSERT INTO units (unitName, army_id) VALUES(?, ?)\", [unitName, army_id], callback, errorHandler);\n  });\n}\n\nfunction updateUnit(updateString, unit_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"UPDATE units SET ? WHERE id = ?\", [updateString, unit_id], callback, errorHandler);\n  });\n}\n\nfunction getUnit(unit_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM units WHERE id = ?\", [unit_id], callback, errorHandler);\n  });\n}\n\nfunction getUnitsByArmy(army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM units WHERE army_id = ?\", [army_id], callback, errorHandler);\n  });\n}\n\nfunction getAllUnits(callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"SELECT * FROM units\", [], callback, errorHandler);\n  });\n}\n\nfunction deleteUnit(unit_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"DELETE FROM units WHERE id = ?\", [unit_id], callback, errorHandler);\n  });\n}\n\nfunction deleteUnitsByArmy(army_id, callback, errorHandler) {\n  db.transaction(function (tx) {\n    tx.executeSql(\"DELETE FROM units WHERE army_id = ?\", [army_id], callback, errorHandler);\n  });\n}\n\nexport default {\n  newUnit: newUnit,\n  updateUnit: updateUnit,\n  getUnit: getUnit,\n  getUnitsByArmy: getUnitsByArmy,\n  getAllUnits: getAllUnits,\n  deleteUnit: deleteUnit,\n  deleteUnitsByArmy: deleteUnitsByArmy\n};","map":{"version":3,"sources":["/home/jhett/Documents/averyStuff/hobby-streak/hobby-streak/App/db/units.js"],"names":["SQLite","db","openDatabase","newUnit","unitName","army_id","callback","errorHandler","transaction","tx","executeSql","updateUnit","updateString","unit_id","getUnit","getUnitsByArmy","getAllUnits","deleteUnit","deleteUnitsByArmy"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AACA,IAAMC,EAAE,GAAGD,MAAM,CAACE,YAAP,CAAoB,UAApB,CAAX;;AAEA,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8CC,YAA9C,EAA2D;AACzDN,EAAAA,EAAE,CAACO,WAAH,CACE,UAAAC,EAAE,EAAI;AACJA,IAAAA,EAAE,CAACC,UAAH,CACC,oDADD,EAEC,CAACN,QAAD,EAAWC,OAAX,CAFD,EAGCC,QAHD,EAICC,YAJD;AAMD,GARH;AAUD;;AAED,SAASI,UAAT,CAAoBC,YAApB,EAAkCC,OAAlC,EAA2CP,QAA3C,EAAqDC,YAArD,EAAkE;AACjEN,EAAAA,EAAE,CAACO,WAAH,CACC,UAAAC,EAAE,EAAE;AACHA,IAAAA,EAAE,CAACC,UAAH,CACC,iCADD,EAEC,CAACE,YAAD,EAAeC,OAAf,CAFD,EAGCP,QAHD,EAICC,YAJD;AAMA,GARF;AAUA;;AAED,SAASO,OAAT,CAAiBD,OAAjB,EAA0BP,QAA1B,EAAoCC,YAApC,EAAiD;AAChDN,EAAAA,EAAE,CAACO,WAAH,CACC,UAAAC,EAAE,EAAE;AACHA,IAAAA,EAAE,CAACC,UAAH,CACC,kCADD,EAEC,CAACG,OAAD,CAFD,EAGCP,QAHD,EAICC,YAJD;AAMA,GARF;AAUA;;AAED,SAASQ,cAAT,CAAwBV,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAwD;AACvDN,EAAAA,EAAE,CAACO,WAAH,CACC,UAAAC,EAAE,EAAE;AACHA,IAAAA,EAAE,CAACC,UAAH,CACC,uCADD,EAEC,CAACL,OAAD,CAFD,EAGCC,QAHD,EAICC,YAJD;AAMA,GARF;AAUA;;AAGD,SAASS,WAAT,CAAqBV,QAArB,EAA+BC,YAA/B,EAA4C;AAC3CN,EAAAA,EAAE,CAACO,WAAH,CACC,UAAAC,EAAE,EAAE;AACHA,IAAAA,EAAE,CAACC,UAAH,CACC,qBADD,EAEC,EAFD,EAGCJ,QAHD,EAICC,YAJD;AAMA,GARF;AAUA;;AAED,SAASU,UAAT,CAAoBJ,OAApB,EAA6BP,QAA7B,EAAuCC,YAAvC,EAAoD;AACnDN,EAAAA,EAAE,CAACO,WAAH,CACC,UAAAC,EAAE,EAAE;AACHA,IAAAA,EAAE,CAACC,UAAH,CACC,gCADD,EAEC,CAACG,OAAD,CAFD,EAGCP,QAHD,EAICC,YAJD;AAMA,GARF;AAUA;;AACD,SAASW,iBAAT,CAA2Bb,OAA3B,EAAoCC,QAApC,EAA8CC,YAA9C,EAA2D;AAC1DN,EAAAA,EAAE,CAACO,WAAH,CACC,UAAAC,EAAE,EAAE;AACHA,IAAAA,EAAE,CAACC,UAAH,CACC,qCADD,EAEC,CAACL,OAAD,CAFD,EAGCC,QAHD,EAICC,YAJD;AAMA,GARF;AAUA;;AACD,eAAc;AACbJ,EAAAA,OAAO,EAAPA,OADa;AAEbQ,EAAAA,UAAU,EAAVA,UAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,cAAc,EAAdA,cAJa;AAKbC,EAAAA,WAAW,EAAXA,WALa;AAMbC,EAAAA,UAAU,EAAVA,UANa;AAObC,EAAAA,iBAAiB,EAAjBA;AAPa,CAAd","sourcesContent":["import * as SQLite from 'expo-sqlite'\nconst db = SQLite.openDatabase(\"hobby.db\")\n\nfunction newUnit(unitName, army_id, callback, errorHandler){\n  db.transaction(\n    tx => {\n      tx.executeSql(\n\t      \"INSERT INTO units (unitName, army_id) VALUES(?, ?)\",\n\t      [unitName, army_id],\n\t      callback,\n\t      errorHandler\n      )\n    }\n  )\n}\n\nfunction updateUnit(updateString, unit_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"UPDATE units SET ? WHERE id = ?\",\n\t\t\t\t[updateString, unit_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getUnit(unit_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM units WHERE id = ?\",\n\t\t\t\t[unit_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction getUnitsByArmy(army_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM units WHERE army_id = ?\",\n\t\t\t\t[army_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\n\nfunction getAllUnits(callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"SELECT * FROM units\",\n\t\t\t\t[],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\n\nfunction deleteUnit(unit_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"DELETE FROM units WHERE id = ?\",\n\t\t\t\t[unit_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\nfunction deleteUnitsByArmy(army_id, callback, errorHandler){\n\tdb.transaction(\n\t\ttx=>{\n\t\t\ttx.executeSql(\n\t\t\t\t\"DELETE FROM units WHERE army_id = ?\",\n\t\t\t\t[army_id],\n\t\t\t\tcallback,\n\t\t\t\terrorHandler\n\t\t\t)\n\t\t}\n\t)\n}\nexport default{\n\tnewUnit,\n\tupdateUnit,\n\tgetUnit,\n\tgetUnitsByArmy,\n\tgetAllUnits,\n\tdeleteUnit,\n\tdeleteUnitsByArmy\n}\n"]},"metadata":{},"sourceType":"module"}