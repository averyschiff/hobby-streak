{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/avery/hobby-streak/App/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase('hobby.db');\nimport styles from \"./styles\";\nimport { Provider } from 'react-redux';\nimport { dbInit } from \"./db\";\nimport SingleModel from \"./Components/SingleModel\";\nimport store from \"./store\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.incrementTables = function () {\n      _this.setState({\n        tables: _this.state.tables + 1\n      });\n    };\n\n    _this.loadTables = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dbInit.clearTables();\n              dbInit.createArmyTable(_this.incrementTables, true);\n              dbInit.createUnitTable(_this.incrementTables, true);\n              dbInit.createModelTable(_this.incrementTables, true);\n              dbInit.createTaskTable(_this.incrementTables, false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      tables: 0\n    };\n    _this.incrementTables = _this.incrementTables.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadTables();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.tables >= 4) {\n        return React.createElement(Provider, {\n          store: store,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }\n        }, React.createElement(SingleModel, {\n          model_id: 1,\n          unitName: \"Mork's Mighty Mushroom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 6\n          }\n        }, \"Loading tables...\"));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/avery/hobby-streak/App/App.js"],"names":["StatusBar","React","SQLite","db","openDatabase","styles","Provider","dbInit","SingleModel","store","App","props","incrementTables","setState","tables","state","loadTables","clearTables","createArmyTable","createUnitTable","createModelTable","createTaskTable","bind","Component"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,IAAMC,EAAE,GAAGD,MAAM,CAACE,YAAP,CAAoB,UAApB,CAAX;AACA,OAAOC,MAAP;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,SAAQC,MAAR;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP;;IAGqBC,G;;;;;AAEpB,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQlBC,eARkB,GAQA,YAAM;AACvB,YAAKC,QAAL,CAAc;AACbC,QAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWD,MAAX,GAAkB;AADb,OAAd;AAGA,KAZiB;;AAAA,UAelBE,UAfkB,GAeL;AAAA;AAAA;AAAA;AAAA;AACZT,cAAAA,MAAM,CAACU,WAAP;AACAV,cAAAA,MAAM,CAACW,eAAP,CAAuB,MAAKN,eAA5B,EAA4C,IAA5C;AACAL,cAAAA,MAAM,CAACY,eAAP,CAAuB,MAAKP,eAA5B,EAA4C,IAA5C;AACAL,cAAAA,MAAM,CAACa,gBAAP,CAAwB,MAAKR,eAA7B,EAA6C,IAA7C;AACAL,cAAAA,MAAM,CAACc,eAAP,CAAuB,MAAKT,eAA5B,EAA4C,KAA5C;;AALY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAfK;;AAEjB,UAAKG,KAAL,GAAW;AACVD,MAAAA,MAAM,EAAE;AADE,KAAX;AAGA,UAAKF,eAAL,GAAuB,MAAKA,eAAL,CAAqBU,IAArB,+BAAvB;AALiB;AAMjB;;;;wCAqBkB;AAClB,WAAKN,UAAL;AACA;;;6BAEO;AACP,UAAI,KAAKD,KAAL,CAAWD,MAAX,IAAmB,CAAvB,EAAyB;AACxB,eACC,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AAAa,UAAA,QAAQ,EAAE,CAAvB;AAA0B,UAAA,QAAQ,EAAE,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADD;AAKA,OAND,MAMK;AACJ,eACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,CADD;AAKA;AACD;;;;EA/C+BR,KAAK,CAACsB,S;;SAAlBb,G","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport * as SQLite from 'expo-sqlite'\nconst db = SQLite.openDatabase('hobby.db');\nimport styles from './styles'\nimport {Provider} from 'react-redux'\n\nimport {dbInit} from \"./db\"\nimport SingleModel from \"./Components/SingleModel\"\nimport store from './store'\n\n\nexport default class App extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\ttables: 0\n\t\t}\n\t\tthis.incrementTables = this.incrementTables.bind(this)\n\t}\n\n\tincrementTables = () => {\n\t\tthis.setState({\n\t\t\ttables: this.state.tables+1\n\t\t})\n\t}\n\n\t//Create databases if non-existent\n\tloadTables = async () => {\n\t\tdbInit.clearTables()\n\t\tdbInit.createArmyTable(this.incrementTables,true)\n\t\tdbInit.createUnitTable(this.incrementTables,true)\n\t\tdbInit.createModelTable(this.incrementTables,true)\n\t\tdbInit.createTaskTable(this.incrementTables,false)\n\t\t//dbInit.testArmyTable()\n\t\t//dbInit.testUnitTable()\n\t\t//dbInit.testModelTable()\n\t\t//dbInit.testTaskTable()\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadTables()\n\t}\n\n\trender(){\n\t\tif (this.state.tables>=4){\n\t\t\treturn (\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t<SingleModel model_id={1} unitName={\"Mork's Mighty Mushroom\"}/>\n\t\t\t\t</Provider>\n\t\t\t)\n\t\t}else{\n\t\t\treturn(\n\t\t\t\t<View>\n\t\t\t\t\t<Text>Loading tables...</Text>\n\t\t\t\t</View>\n\t\t\t)\n\t\t}\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}